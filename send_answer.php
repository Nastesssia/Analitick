<?php
session_start();
header('Content-Type: application/json');

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require 'vendor/autoload.php';
require_once 'DB_Connect.php';

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('display_errors', 0);
ini_set('log_errors', 1);
ini_set('error_log', __DIR__ . '/php_errors.log');
error_reporting(E_ALL);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if (!isset($_SESSION['user_id']) || $_SESSION['role'] !== 'assistant') {
    
    echo json_encode(['success' => false, 'message' => '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.']);
    exit();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
$data = $_POST;
error_log("üì¶ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: " . json_encode($data, JSON_UNESCAPED_UNICODE));

$subject = trim($data['subject'] ?? '');
$answer_text = trim($data['answer_text'] ?? '');
$surname = trim($data['surname'] ?? '');
$name = trim($data['name'] ?? '');
$patronymic = trim($data['patronymic'] ?? '');
$phone = trim($data['phone'] ?? '');
$email = trim($data['email'] ?? '');
$problem = trim($data['problem'] ?? '');
$file_links = json_decode($data['file_links'] ?? '[]', true);
$revision_comment = trim($data['revision_comment'] ?? ''); // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ —Ñ–∞–π–ª—ã
$revision_files = [];
if (!empty($_FILES)) {
    foreach ($_FILES as $file) {
        if ($file['error'] === UPLOAD_ERR_OK) {
            $revision_files[] = ['name' => $file['name']];
        }
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–≤–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–æ–π
$is_revision = !empty($revision_comment) || !empty($revision_files);
error_log("üîç –≠—Ç–æ –¥–æ—Ä–∞–±–æ—Ç–∫–∞? " . ($is_revision ? "–î–∞" : "–ù–µ—Ç"));

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
error_log("üì¶ –î–∞–Ω–Ω—ã–µ: " . json_encode($data, JSON_UNESCAPED_UNICODE));
error_log("üìÇ –§–∞–π–ª—ã: " . json_encode($_FILES, JSON_UNESCAPED_UNICODE));
error_log("üîç –î–æ—Ä–∞–±–æ—Ç–∫–∞: " . ($is_revision ? "–î–∞" : "–ù–µ—Ç"));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
if (empty($subject) || empty($answer_text) || empty($email) || empty($problem)) {
    echo json_encode(['success' => false, 'message' => '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞.']);
    exit();
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
$db = new DB_Connect();
$conn = $db->connect();

// –ü–æ–∏—Å–∫ –∑–∞—è–≤–∫–∏ –ø–æ email –∏ —Ç–µ–∫—Å—Ç—É –ø—Ä–æ–±–ª–µ–º—ã
$stmt = $conn->prepare("SELECT id FROM form_submissions WHERE email = ? AND problem = ? LIMIT 1");
$stmt->bind_param("ss", $email, $problem);
$stmt->execute();
$result = $stmt->get_result();

if ($result->num_rows > 0) {
    $submission = $result->fetch_assoc();
    $submission_id = $submission['id'];
    error_log("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞—è–≤–∫–∞ ID: {$submission_id}");
} else {
    echo json_encode(['success' => false, 'message' => '–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.']);
    exit();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PHPMailer
$mail = new PHPMailer(true);
try {
    // SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    $mail->isSMTP();
    $mail->Host = 'smtp.gmail.com';
    $mail->SMTPAuth = true;
    $mail->Username = 'analitikgrupp@gmail.com';
    $mail->Password = 'rhkt eykw wrrk fevo';
    $mail->SMTPSecure = 'ssl';
    $mail->Port = 465;
    $mail->CharSet = 'UTF-8';

    // –û—Ç –∫–æ–≥–æ
    $mail->setFrom('i@aleksandr-kabanov.ru', '–ö–∞–±–∏–Ω–µ—Ç –ø–æ–º–æ—â–Ω–∏–∫–∞');

    // –ö–æ–º—É
    $mail->addAddress('i@aleksandr-kabanov.ru', '–Æ—Ä–∏—Å—Ç');
    $mail->addCC('analitikgrupp@gmail.com');

    // –¢–µ–º–∞ –ø–∏—Å—å–º–∞
    $mail->Subject = "–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞—è–≤–∫—É: {$subject}" . ($is_revision ? " (–î–æ—Ä–∞–±–æ—Ç–∫–∞)" : "");

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–∞ –ø–∏—Å—å–º–∞
    $mailContent = "<h2>–ö–æ–ø–∏—è –∑–∞—è–≤–∫–∏:</h2>
        <p><strong>–§–∞–º–∏–ª–∏—è:</strong> {$surname}</p>
        <p><strong>–ò–º—è:</strong> {$name}</p>
        <p><strong>–û—Ç—á–µ—Å—Ç–≤–æ:</strong> {$patronymic}</p>
        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {$phone}</p>
        <p><strong>Email:</strong> {$email}</p>
        <p><strong>–ü—Ä–æ–±–ª–µ–º–∞:</strong> {$problem}</p>
        <hr>
        <p><strong>–§–∞–π–ª—ã –∫–ª–∏–µ–Ω—Ç–∞:</strong></p>
        <ul>";

    foreach ($file_links as $file) {
        $mailContent .= "<li><a href='{$file['url']}' target='_blank'>{$file['name']}</a></li>";
    }

    $mailContent .= "</ul>
        <hr>
        <h2>–û—Ç–≤–µ—Ç –ø–æ–º–æ—â–Ω–∏–∫–∞:</h2>
        <p><strong>–¢–µ–º–∞:</strong> {$subject}</p>
        <p><strong>–û—Ç–≤–µ—Ç:</strong> {$answer_text}</p>";

    // –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    if ($is_revision) {
        error_log("üõ† –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É ID {$submission_id} —Å –¥–æ—Ä–∞–±–æ—Ç–∫–æ–π...");

        $mailContent .= "<hr><h3>üîÑ –î–æ—Ä–∞–±–æ—Ç–∫–∞:</h3>
                         <p><strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {$revision_comment}</p>";
    }

    $mailContent .= "<hr><p><strong>–ü—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</strong></p><ul>";

    // –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    foreach ($_FILES as $file) {
        if ($file['error'] === UPLOAD_ERR_OK) {
            $mail->addAttachment($file['tmp_name'], $file['name']);
            $mailContent .= "<li>{$file['name']}</li>";
        }
    }

    $mailContent .= "</ul>";
    $mail->isHTML(true);
    $mail->Body = $mailContent;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    $mail->send();
    error_log("üìß –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ –≤ –ë–î
    if ($is_revision) {
        // –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É
        $stmt = $conn->prepare("
            UPDATE form_submissions 
            SET revision_comment = ?, 
                revision_files = ?, 
                revision_completed_at = NOW(), 
                visible_to_assistant = 0, 
                resolved = 1
            WHERE id = ?
        ");
        error_log("üìå –ì–æ—Ç–æ–≤–∏–º SQL-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ revision_completed_at –¥–ª—è –∑–∞—è–≤–∫–∏ ID {$submission_id}");

        $revision_files_json = json_encode($revision_files, JSON_UNESCAPED_UNICODE);
        $stmt->bind_param("ssi", $revision_comment, $revision_files_json, $submission_id);

       if ($stmt->execute()) {
        error_log("‚úÖ –ó–∞—è–≤–∫–∞ ID {$submission_id} —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∞.");
    } else {
        error_log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ ID {$submission_id}: " . $stmt->error);
    }
        error_log("üîÑ –ó–∞—è–≤–∫–∞ ID {$submission_id} –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ –∑–∞–∫—Ä—ã—Ç–∞.");
    } else {
        // –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ —Ä–µ—à–µ–Ω–∞ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
        $stmt = $conn->prepare("
            UPDATE form_submissions 
            SET resolved = 1, 
                visible_to_assistant = 0, 
                assistant_resolved_at = IFNULL(assistant_resolved_at, NOW())
            WHERE id = ?
        ");
        $stmt->bind_param("i", $submission_id);
        $stmt->execute();
        error_log("‚úÖ –ó–∞—è–≤–∫–∞ ID {$submission_id} —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∞.");
    }

    echo json_encode(['success' => true, 'message' => '–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.']);

} catch (Exception $e) {
    echo json_encode(['success' => false, 'message' => '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: ' . $e->getMessage()]);
    error_log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: " . $e->getMessage());
}

$conn->close();
?>
